let
  Source = List.Dates,
  #"Created date list" = Source(DateTime.Date(DateTime.FixedLocalNow()), 1, #duration(1, 0, 0, 0)),
  #"Converted to Table" = Table.FromList(#"Created date list", Splitter.SplitByNothing(), null, null, ExtraValues.Error),
  #"Renamed Columns" = Table.RenameColumns(#"Converted to Table", {{"Column1", "Date"}}),
  #"Added start date" = Table.AddColumn(#"Renamed Columns", "StartDate", each "'"
    & Date.ToText([Date], "YYYY-MM-DD")
    & "T00:00:00.000Z"
    & "'"),
  #"Added end date" = Table.AddColumn(#"Added start date", "EndDate", each "'"
    & Date.ToText([Date], "YYYY-MM-DD")
    & "T23:59:59.999Z"
    & "'"),
  #"Invoked fn_GetActivity" = Table.AddColumn(#"Added end date", "GETActivity", each fn_GetActivity(fn_GetAccessToken(), [StartDate], [EndDate], null, 0, {})),
  #"Expanded GETActivity" = Table.ExpandListColumn(#"Invoked fn_GetActivity", "GETActivity"),
  #"Expanded GETActivity1" = Table.ExpandRecordColumn(#"Expanded GETActivity", "GETActivity", {"Id", "RecordType", "CreationTime", "Operation", "OrganizationId", "UserType", "UserKey", "Workload", "UserId", "UserAgent", "Activity", "ItemName", "WorkSpaceName", "DatasetName", "ReportName", "WorkspaceId", "ObjectId", "DatasetId", "ReportId", "IsSuccess", "ReportType", "RequestId", "ActivityId", "DistributionMethod", "ImportId", "ImportSource", "ImportType", "ImportDisplayName"}, {"Id", "RecordType", "CreationTime", "Operation", "OrganizationId", "UserType", "UserKey", "Workload", "UserId", "UserAgent", "Activity", "ItemName", "WorkSpaceName", "DatasetName", "ReportName", "WorkspaceId", "ObjectId", "DatasetId", "ReportId", "IsSuccess", "ReportType", "RequestId", "ActivityId", "DistributionMethod", "ImportId", "ImportSource", "ImportType", "ImportDisplayName"}),
  #"Changed column type" = Table.TransformColumnTypes(#"Expanded GETActivity1", {{"WorkSpaceName", type text}}),
  #"Filtered out personal and myworkspace" = Table.SelectRows(#"Changed column type", each [WorkSpaceName] <> "My Workspace" and not Text.StartsWith([WorkSpaceName], "PersonalWorkspace")),
  #"Filtered out selected operations" = Table.SelectRows(#"Filtered out personal and myworkspace", each [Id] <> null and [Operation] <> "ExportActivityEvents" and [Operation] <> "GetGroupsAsAdmin" and [Activity] <> "GenerateCustomVisualAADAccessToken" and [Activity] <> "GenerateCustomVisualWACAccessToken" and [Activity] <> "GetAllGatewayClusterDatasources" and [Activity] <> "GetDatasources" and [Activity] <> "GetGatewayClusters" and [Activity] <> "GetGatewayRegions" and [Activity] <> "GetWorkspaces" and [Activity] <> "OptInForProTrial" and [Activity] <> "PrintReport" and [Activity] <> "UpdateDatasourceCredentials" and [Activity] <> "UpdateFolderAccess"),
  #"Replaced value" = Table.ReplaceValue(#"Filtered out selected operations", "'", "", Replacer.ReplaceText, {"StartDate", "EndDate"}),
  #"Changed Type" = Table.TransformColumnTypes(#"Replaced value", {{"Date", type date}, {"StartDate", type datetime}, {"EndDate", type datetime}, {"Id", type text}, {"RecordType", Int64.Type}, {"CreationTime", type datetime}, {"Operation", type text}, {"OrganizationId", type text}, {"UserType", Int64.Type}, {"UserKey", type text}, {"Workload", type text}, {"UserId", type text}, {"UserAgent", type text}, {"Activity", type text}, {"ItemName", type text}, {"WorkSpaceName", type text}, {"DatasetName", type text}, {"ReportName", type text}, {"WorkspaceId", type text}, {"ObjectId", type text}, {"DatasetId", type text}, {"ReportId", type text}, {"IsSuccess", type logical}, {"ReportType", type text}, {"RequestId", type text}, {"ActivityId", type text}, {"DistributionMethod", type text}, {"ImportId", type text}, {"ImportSource", type text}, {"ImportType", type text}, {"ImportDisplayName", type text}}),
  #"Removed duplicates" = Table.Distinct(#"Changed Type", {"ActivityId"})
in
  #"Removed duplicates"